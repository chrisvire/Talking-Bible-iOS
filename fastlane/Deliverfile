# This is the example Deliverfile
# For more information about each property, visit the GitHub documentation: https://github.com/krausefx/deliver
# 
# You can remove those parts you don't need
# 
# A list of available language codes can be found here: https://github.com/krausefx/deliver#available-language-codes
# 
# Everything next to a # is a comment and will be ignored

# hide_transporter_output # remove the '#' in the beginning of the line, to hide the output while uploading

########################################
# App Metadata
########################################

app_identifier "org.talkingbibles.TalkingBible"

# This folder has to include one folder for each language
# More information about automatic screenshot upload: 
# https://github.com/KrauseFx/deliver#upload-screenshots-to-itunes-connect
screenshots_path "./screenshots"

#
# version '1.2' # you can pass this if you want to verify the version number with the ipa file
# 

title({
   "en-US" => "Talking Bible",
   "es"	=> "La Biblia Habla",
   "fr" => "La Bible Parler"
})

# 
# changelog({
#   "en-US" => "iPhone 6 (Plus) Support" 
# })



########################################
# Building and Testing
########################################

# Dynamic generation of the ipa file
# I'm using Shenzhen by Mattt, but you can use any build tool you want
# Remove the whole block if you do not want to upload an ipa file
ipa do
    system("ipa build --verbose --workspace ../TalkingBible.xcworkspace --scheme TalkingBible") # build your project using Shenzhen
    "../Talking\ Bible.ipa" # Tell 'Deliver' where it can find the finished ipa file
end

# ipa "../Talking\ Bible.ipa" # this can be used instead of the `do` block, if you prefer manually building the ipa file

beta_ipa do
    system("ipa build --verbose --workspace ../TalkingBible.xcworkspace --scheme TalkingBible") # customize this to build beta version
    "../Talking\ Bible.ipa"
end

# unit_tests do
#   If you use fastlane (http://github.com/krausefx/fastlane), run the tests there
#   system("xctool test")
# end

success do
  system("say 'Successfully deployed a new version.'")
end
